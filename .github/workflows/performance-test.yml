name: Performance Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run performance tests daily
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  benchmark-core:
    name: Core Engine Benchmarks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Lua
        uses: leafo/gh-actions-lua@v10
        with:
          luaVersion: "5.4"
      
      - name: Setup LuaRocks
        uses: leafo/gh-actions-luarocks@v4
      
      - name: Install dependencies
        run: |
          luarocks install luafilesystem
          luarocks install lpeg
      
      - name: Run parser benchmarks
        run: |
          cd tests/performance
          lua benchmarks/parser_benchmark.lua
      
      - name: Run story execution benchmarks
        run: |
          cd tests/performance
          lua benchmarks/story_benchmark.lua
      
      - name: Run variable management benchmarks
        run: |
          cd tests/performance
          lua benchmarks/variables_benchmark.lua
      
      - name: Generate benchmark report
        run: |
          cd tests/performance
          lua generate_report.lua > benchmark-report.txt
      
      - name: Upload benchmark results
        uses: actions/upload-artifact@v4
        with:
          name: core-benchmarks
          path: tests/performance/benchmark-report.txt

  benchmark-web-runtime:
    name: Web Runtime Performance
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install dependencies
        run: cd runtime/web && npm ci
      
      - name: Build runtime
        run: cd runtime/web && npm run build
      
      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            http://localhost:8080/test-story.html
          uploadArtifacts: true
          temporaryPublicStorage: true
      
      - name: Run custom performance tests
        run: cd runtime/web && npm run test:performance
      
      - name: Upload performance results
        uses: actions/upload-artifact@v4
        with:
          name: runtime-performance
          path: runtime/web/performance-results.json

  memory-profiling:
    name: Memory Profiling
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Lua
        uses: leafo/gh-actions-lua@v10
        with:
          luaVersion: "5.4"
      
      - name: Setup LuaRocks
        uses: leafo/gh-actions-luarocks@v4
      
      - name: Install profiling tools
        run: luarocks install ProFi
      
      - name: Run memory profiling
        run: |
          cd tests/performance/profiling
          lua memory_profile.lua
      
      - name: Upload profiling data
        uses: actions/upload-artifact@v4
        with:
          name: memory-profile
          path: tests/performance/profiling/memory-report.txt

  load-testing:
    name: Load Testing
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install dependencies
        run: cd runtime/web && npm ci
      
      - name: Build runtime
        run: cd runtime/web && npm run build
      
      - name: Start test server
        run: |
          cd runtime/web
          npm run serve &
          sleep 5
      
      - name: Install k6
        run: |
          sudo gpg -k
          sudo gpg --no-default-keyring --keyring /usr/share/keyrings/k6-archive-keyring.gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C5AD17C747E3415A3642D57D77C6C491D6AC1D69
          echo "deb [signed-by=/usr/share/keyrings/k6-archive-keyring.gpg] https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
          sudo apt-get update
          sudo apt-get install k6
      
      - name: Run load tests
        run: k6 run tests/performance/load/story-load-test.js
      
      - name: Upload load test results
        uses: actions/upload-artifact@v4
        with:
          name: load-test-results
          path: tests/performance/load/results.json

  compare-benchmarks:
    name: Compare with Baseline
    runs-on: ubuntu-latest
    needs: [benchmark-core, benchmark-web-runtime]
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
      
      - name: Download current benchmarks
        uses: actions/download-artifact@v4
        with:
          name: core-benchmarks
          path: current/
      
      - name: Download baseline benchmarks
        uses: dawidd6/action-download-artifact@v3
        with:
          workflow: performance-test.yml
          branch: main
          name: core-benchmarks
          path: baseline/
        continue-on-error: true
      
      - name: Compare benchmarks
        run: |
          if [ -f baseline/benchmark-report.txt ]; then
            python3 build/scripts/compare-benchmarks.py \
              baseline/benchmark-report.txt \
              current/benchmark-report.txt > comparison.md
          else
            echo "No baseline found, skipping comparison" > comparison.md
          fi
      
      - name: Comment PR with results
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const comparison = fs.readFileSync('comparison.md', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comparison
            });