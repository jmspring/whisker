name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Lua
        uses: leafo/gh-actions-lua@v10
        with:
          luaVersion: "5.4"
      
      - name: Setup Luarocks
        uses: leafo/gh-actions-luarocks@v4
      
      - name: Install Luacheck
        run: luarocks install luacheck
      
      - name: Lint Lua code
        run: luacheck src/ tests/ --config .luacheckrc
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install JS dependencies
        run: |
          cd editor/web && npm ci
          cd ../..
          cd runtime/web && npm ci
      
      - name: Lint JavaScript/TypeScript
        run: |
          cd editor/web && npm run lint
          cd ../..
          cd runtime/web && npm run lint

  test-core:
    name: Test Core (Lua ${{ matrix.lua-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        lua-version: ['5.1', '5.2', '5.3', '5.4', 'luajit']
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Lua
        uses: leafo/gh-actions-lua@v10
        with:
          luaVersion: ${{ matrix.lua-version }}
      
      - name: Setup Luarocks
        uses: leafo/gh-actions-luarocks@v4
      
      - name: Install dependencies
        run: |
          luarocks install busted
          luarocks install luacov
          luarocks install luafilesystem
      
      - name: Run unit tests
        run: |
          busted tests/unit --coverage
      
      - name: Generate coverage report
        run: luacov
      
      - name: Upload coverage
        uses: codecov/codecov-action@v4
        with:
          files: ./luacov.report.out
          flags: core-lua-${{ matrix.lua-version }}

  test-web-editor:
    name: Test Web Editor
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: editor/web/package-lock.json
      
      - name: Install dependencies
        run: cd editor/web && npm ci
      
      - name: Run unit tests
        run: cd editor/web && npm test -- --coverage
      
      - name: Run integration tests
        run: cd editor/web && npm run test:integration
      
      - name: Upload coverage
        uses: codecov/codecov-action@v4
        with:
          files: ./editor/web/coverage/lcov.info
          flags: web-editor

  test-runtime:
    name: Test Web Runtime
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: runtime/web/package-lock.json
      
      - name: Install dependencies
        run: cd runtime/web && npm ci
      
      - name: Run unit tests
        run: cd runtime/web && npm test -- --coverage
      
      - name: Run E2E tests
        run: cd runtime/web && npm run test:e2e
      
      - name: Upload coverage
        uses: codecov/codecov-action@v4
        with:
          files: ./runtime/web/coverage/lcov.info
          flags: web-runtime

  build:
    name: Build All Components
    runs-on: ${{ matrix.os }}
    needs: [lint, test-core, test-web-editor, test-runtime]
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup build environment
        run: ./scripts/setup-dev.sh
      
      - name: Build core
        run: ./build/scripts/build-core.sh
      
      - name: Build web editor
        run: ./build/scripts/build-web-editor.sh
      
      - name: Build web runtime
        run: ./build/scripts/build-runtime.sh
      
      - name: Build desktop editor (LÃ–VE)
        run: ./build/scripts/build-desktop.sh
      
      - name: Archive build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: whisker-${{ matrix.os }}
          path: dist/
          retention-days: 7

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: whisker-ubuntu-latest
          path: dist/
      
      - name: Run integration tests
        run: ./build/scripts/run-tests.sh integration
      
      - name: Run story validation tests
        run: ./build/scripts/validate-stories.sh