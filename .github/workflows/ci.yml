name: CI

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint-lua:
    name: Lint Lua Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Lua
        uses: leafo/gh-actions-lua@v10
        with:
          luaVersion: "5.4"
      
      - name: Setup Luarocks
        uses: leafo/gh-actions-luarocks@v4
      
      - name: Install Luacheck
        run: luarocks install luacheck
      
      - name: Lint Lua code
        run: luacheck lib/whisker/ tests/ examples/ --config .luacheckrc || true
        continue-on-error: true

  test-lua:
    name: Test Lua Core (Lua ${{ matrix.lua-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        lua-version: ['5.4']  # Start with just 5.4 for now
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Lua
        uses: leafo/gh-actions-lua@v10
        with:
          luaVersion: ${{ matrix.lua-version }}
      
      - name: Setup Luarocks
        uses: leafo/gh-actions-luarocks@v4
      
      - name: Install dependencies
        run: |
          luarocks install luafilesystem || echo "LuaFileSystem install failed, continuing..."
          luarocks install busted
        continue-on-error: true

      - name: Set up Lua paths
        run: |
          echo "LUA_PATH=./lib/whisker/?.lua;./lib/whisker/?/init.lua;;" >> $GITHUB_ENV

      - name: Run test suite (Busted BDD)
        run: |
          echo "Running Whisker test suite with Busted..."
          busted tests/test_story.lua \
                 tests/test_compact_integration.lua \
                 tests/test_rijks_load.lua \
                 tests/test_renderer.lua \
                 tests/test_validator.lua \
                 tests/test_profiler.lua \
                 tests/test_debugger.lua \
                 tests/test_metatable_preservation.lua \
                 tests/test_save_system.lua \
                 tests/test_template_processor.lua \
                 tests/test_harlowe_converter.lua \
                 tests/test_sugarcube_converter.lua \
                 tests/test_chapbook_converter.lua \
                 tests/test_snowman_converter.lua \
                 tests/test_format_converter.lua \
                 tests/test_import.lua \
                 tests/test_export.lua \
                 tests/test_compact_format.lua \
                 tests/test_harlowe_parser.lua \
                 tests/test_sugarcube_parser.lua \
                 tests/test_chapbook_parser.lua \
                 tests/test_snowman_parser.lua \
                 tests/test_converter_roundtrip.lua \
                 tests/test_event_system.lua \
                 tests/test_string_utils.lua
      
      - name: Upload test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-report-lua-${{ matrix.lua-version }}
          path: tests/test_report.txt
          if-no-files-found: ignore

  validate-web-editor:
    name: Validate Web Editor Files
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Check HTML files
        run: |
          echo "Checking HTML files exist..."
          test -f editor/web/index.html && echo "✓ index.html found" || echo "✗ index.html missing"
          test -f editor/web/css/editor.css && echo "✓ editor.css found" || echo "✗ editor.css missing"
          test -f editor/web/css/theme.css && echo "✓ theme.css found" || echo "✗ theme.css missing"
          test -f editor/web/js/editor.js && echo "✓ editor.js found" || echo "✗ editor.js missing"
          test -f editor/web/js/export.js && echo "✓ export.js found" || echo "✗ export.js missing"
      
      - name: Check for syntax errors in JavaScript
        run: |
          find editor/web/js -name "*.js" -type f -exec node --check {} \; || true
        continue-on-error: true
      
      - name: Validate HTML structure
        run: |
          grep -q "<!DOCTYPE html>" editor/web/index.html && echo "✓ HTML DOCTYPE found" || echo "✗ Missing DOCTYPE"
          grep -q "<html" editor/web/index.html && echo "✓ HTML tag found" || echo "✗ Missing HTML tag"
          grep -q "exportModal" editor/web/index.html && echo "✓ Export modal found" || echo "✗ Export modal missing"

  validate-structure:
    name: Validate Project Structure
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Check core directories
        run: |
          echo "Checking project structure..."
          test -d lib/whisker/core && echo "✓ Core directory exists" || echo "✗ Core directory missing"
          test -d lib/whisker/editor && echo "✓ Editor directory exists" || echo "✗ Editor directory missing"
          test -d lib/whisker/format && echo "✓ Format directory exists" || echo "✗ Format directory missing"
          test -d editor/web && echo "✓ Web editor directory exists" || echo "✗ Web editor directory missing"
          test -d examples && echo "✓ Examples directory exists" || echo "✗ Examples directory missing"
          test -d tests && echo "✓ Tests directory exists" || echo "✗ Tests directory missing"
      
      - name: Check key files
        run: |
          test -f bin/whisker && echo "✓ main.lua exists" || echo "✗ main.lua missing"
          test -f config/default.lua && echo "✓ config.lua exists" || echo "✗ config.lua missing"
          test -f README.md && echo "✓ README.md exists" || echo "✗ README.md missing"
          test -f LICENSE && echo "✓ LICENSE exists" || echo "✗ LICENSE missing"

  count-lines:
    name: Count Lines of Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Count lines
        run: |
          echo "Lines of code by type:"
          echo "Lua files:"
          find . -name "*.lua" -type f -exec wc -l {} + | tail -1 || echo "0 total"
          echo "JavaScript files:"
          find . -name "*.js" -type f -exec wc -l {} + | tail -1 || echo "0 total"
          echo "HTML files:"
          find . -name "*.html" -type f -exec wc -l {} + | tail -1 || echo "0 total"
          echo "CSS files:"
          find . -name "*.css" -type f -exec wc -l {} + | tail -1 || echo "0 total"
          echo "Total project size:"
          find . -type f \( -name "*.lua" -o -name "*.js" -o -name "*.html" -o -name "*.css" -o -name "*.md" \) -exec wc -l {} + | tail -1 || echo "0 total"
